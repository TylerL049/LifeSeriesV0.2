name: github_release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag Name'
        required: true
        default: 'tag'
        type: string
      release_name:
        description: 'Release Name'
        required: true
        default: 'release'
        type: string
      description:
        description: 'Description'
        required: true
        default: 'No description provided'
        type: string
      draft:
        description: 'Draft'
        required: true
        default: false
        type: boolean
      pre_release:
        description: 'Pre-Release'
        required: true
        default: false
        type: boolean
      latest:
        description: 'Latest'
        required: true
        default: true
        type: boolean

jobs:
  release:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: setup jdk 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'microsoft'

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build

      - name: Commit message newline
        run: |
          DESCRIPTION_RAW="${{ github.event.inputs.description }}"
          DESCRIPTION_NEWLINE=$(echo "$DESCRIPTION_RAW" | sed 's/\\n/\'$'\n''/g')
          echo "DESCRIPTION_NEWLINE<<EOF" >> $GITHUB_ENV
          echo "$DESCRIPTION_NEWLINE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Built JARs
          path: |
            ./versions/**/build/libs/*.jar

      - name: Filter non-source JAR files
        id: filtered_jars
        run: |
          jars=$(find ./versions/**/build/libs/ -type f -name "*.jar" ! -name "*-sources.jar")
          echo "jar_files<<EOF" >> $GITHUB_OUTPUT
          echo "$jars" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Generate Version Tag
        id: version
        run: |
          # Generate a version based on current date and commit hash
          VERSION="$(echo ${{ github.event.inputs.tag_name }})"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Generated version: $VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}

      - name: Create GitHub Release with JARs
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          tag_name: ${{ steps.version.outputs.version }}
          name: ${{ github.event.inputs.release_name }}
          body: |
            ${{ env.DESCRIPTION_NEWLINE }}
          draft: ${{ inputs.draft }}
          prerelease: ${{ inputs.pre_release }}
          make_latest: ${{ inputs.latest }}
          files: |
            ${{ steps.filtered_jars.outputs.jar_files }}